# SPDX-License-Identifier: Apache-2.0

---
- name: Configure OVS
  hosts: hypervisors
  vars:
    apply_config: "{{ apply_network_config | default(false) }}"
  tasks:
    - name: Create OVS configuration
      template:
        src: ../templates/ovs_configuration.json.j2
        dest: /etc/ovs_configuration.json
        validate: setup_ovs.py -v -c -f %s
      register: ovs_conf
    - name: Restart votp-config_ovs
      ansible.builtin.systemd:
        name: votp-config_ovs
        state: restarted
      when:
        - apply_config
        - ovs_conf.changed
    - name: Register reboot
      set_fact:
        need_reboot: true
      when:
        - not apply_config
        - ovs_conf.changed

- name: Configure Network
  hosts: hypervisors
  vars:
    systemd_networkd_network: "{{ custom_network }}"
  roles:
    - systemd_networkd

- name: Network configuration
  hosts: hypervisors
  vars:
    apply_config: "{{ apply_network_config | default(false) }}"
  tasks:
    - name: Restart systemd-networkd
      ansible.builtin.systemd:
        name: systemd-networkd
        state: restarted
      when:
        apply_config

- name: Configure hosts and hostname
  hosts: hypervisors
  tasks:
    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"
        use: systemd


- name: Configure systemd-networkd-wait-online.service
  hosts: hypervisors
  tasks:
    - block:
        - name: Create systemd-networkd-wait-online.service.d directory
          file:
            state: directory
            path: /etc/systemd/system/systemd-networkd-wait-online.service.d
            owner: root
            group: root
            mode: 644
        - name: Copy systemd-networkd-wait-online.service overide
          template:
            src: ../templates/systemd-networkd-wait-online.service.j2
            dest: >-
              /etc/systemd/system/systemd-networkd-wait-online.service.d/override.conf
      when: cluster_interface is defined

- name: Restart machine if needed
  hosts: hypervisors
  tasks:
    - block:
        - name: Restart
          reboot:
        - name: Wait for host to be online
          wait_for_connection:
      when: need_reboot is defined and need_reboot
